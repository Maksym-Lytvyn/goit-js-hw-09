{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEF,SAAzBC,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAK8BL,EAAhCa,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAMN,IAJA,IAAMC,EAAQC,OAAOjB,EAAKkB,SAASb,MAAMc,OACnCC,EAAOH,OAAOjB,EAAKkB,SAASE,KAAKD,OACjCE,EAASJ,OAAOjB,EAAKkB,SAASG,OAAOF,OAElCG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,IACMC,EAAeP,EAAQI,EAAOE,EACpCnB,EAFiBmB,EAAI,EAEGC,GACrBC,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvEyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAuCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvE2B,QAAQC,IAAIV,E,CAEhBG,EAAA5B,GAAS6B,OAAOO,KAAK,2B,IAOzBR,EAAA5B,GAAS6B,OAAOO,KAAK,4B","sources":["src/js/03-promises.js"],"sourcesContent":["// імпортуємо бібліотеку\nimport Notiflix from 'notiflix';\n// захоплюємо необхідні елементи\nconst form = document.querySelector('.form');\n// створюємо прототип функції для промісу\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n  \n// створюємо прослуховувач гадсилання форми\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n  \n    const delay = Number(form.elements.delay.value);\n    const step = Number(form.elements.step.value);\n    const amount = Number(form.elements.amount.value);\n  \n    for (let i = 0; i < amount; i++) {\n      const position = i + 1;\n      const currentDelay = delay + step * i;\n      createPromise(position, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n        console.log(currentDelay);\n    }\n    Notiflix.Notify.info('Цикл промісів завершено!')\n  });\n\n\n\n\n// інше\nNotiflix.Notify.info('Віконце сповіщень готове!');\n\n//ПЕРЕВІРКОВИЙ КОД\n// const isSuccess = true;\n\n// function examplePromise(){\n//   const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (isSuccess) {\n//       resolve(22);\n//     } else {\n//       reject(44);\n//     }\n//   }, 5000);\n// });\n\n// promise\n//   .then(value => {\n//     Notiflix.Notify.info(value);\n//   })\n//   .catch(error => {\n//     Notiflix.Notify.info(error);\n//   })\n//   .finally(() => Notiflix.Notify.info(\"Виконання промісу завершено\"));\n// }\n// examplePromise();\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","elements","value","step","amount","i","currentDelay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","console","log","info"],"version":3,"file":"03-promises.607cd205.js.map"}